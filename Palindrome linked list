# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    # @param {ListNode} head
    # @return {boolean}
    def isPalindrome(self, head):
        fast, reverse = head, None
        while fast and fast.next:
            fast = fast.next.next
            head.next, reverse, head  = reverse, head, head.next
        tail = head.next if fast else head
        isPal = True
        while reverse:
            isPal = isPal and reverse.val == tail.val
            reverse.next, reverse, head, tail  = head, reverse.next, reverse, tail.next
            
        return isPal
            
